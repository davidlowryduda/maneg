.\"t
.\" Automatically generated by Pandoc 2.2.1
.\"
.TH "MUTT" "eg" "" "" "Mutt notes"
.hy
.SH MUTT
.PP
\f[B]mutt\f[] \[em] my preferred mail client
.SH SYNOPSIS
.PP
\f[B]mutt\f[]
.SH DESCRIPTION
.PP
Mutt is the mail user agent of the masses of people who love the
terminal and hate guis.
It's curses at its core, and utterly delightful.
.PP
In this documentation, we note the common flags and search patterns that
one always forgets.
.SH MESSAGE STATUS FLAGS
.PP
Next to messages, mutt will insert status flags.
These have the following meanings.
.PP
.TS
tab(@);
l l.
T{
Flag
T}@T{
Description
T}
_
T{
D
T}@T{
message is deleted (is marked for deletion)
T}
T{
d
T}@T{
message has attachments marked for deletion
T}
T{
K
T}@T{
contains a PGP public key
T}
T{
N
T}@T{
message is new
T}
T{
O
T}@T{
message is old
T}
T{
P
T}@T{
message is PGP encrypted
T}
T{
r
T}@T{
message has been replied to
T}
T{
S
T}@T{
message is signed, and the signature is successfully verified
T}
T{
s
T}@T{
message is signed
T}
T{
!
T}@T{
message is flagged
T}
T{
\f[C]*\f[]
T}@T{
message is tagged
T}
T{
n
T}@T{
thread contains new messages (only if collapsed)
T}
T{
o
T}@T{
thread contains old messages (only if collapsed)
T}
.TE
.SH SEARCH PATTERNS
.PP
When searching (or when limiting, which is therefore super useful), mutt
allows one to use many patterns.
These patterns generally take the form of \f[C]~X\f[] where \f[C]X\f[]
is some letter with meaning, possibly expecting some additional argument
after it.
.PP
These patterns are described in the manual.
The appropriate description is below.
.PP
.TS
tab(@);
l l.
T{
Pattern modifier
T}@T{
Description
T}
_
T{
~A
T}@T{
all messages
T}
T{
~b EXPR
T}@T{
messages which contain EXPR in the message body
T}
T{
=b STRING
T}@T{
If IMAP is enabled, like ~b but searches for STRING on the server,
rather than downloading each message and searching it locally.
T}
T{
~B EXPR
T}@T{
messages which contain EXPR in the whole message
T}
T{
=B STRING
T}@T{
If IMAP is enabled, like ~B but searches for STRING on the server,
rather than downloading each message and searching it locally.
T}
T{
~c EXPR
T}@T{
messages carbon\-copied to EXPR
T}
T{
%c GROUP
T}@T{
messages carbon\-copied to any member of GROUP
T}
T{
~C EXPR
T}@T{
messages either to: or cc: EXPR
T}
T{
%C GROUP
T}@T{
messages either to: or cc: to any member of GROUP
T}
T{
~d [MIN]\-[MAX]
T}@T{
messages with \[lq]date\-sent\[rq] in a Date range
T}
T{
~D
T}@T{
deleted messages
T}
T{
~e EXPR
T}@T{
messages which contains EXPR in the \[lq]Sender\[rq] field
T}
T{
%e GROUP
T}@T{
messages which contain a member of GROUP in the \[lq]Sender\[rq] field
T}
T{
~E
T}@T{
expired messages
T}
T{
~F
T}@T{
flagged messages
T}
T{
~f EXPR
T}@T{
messages originating from EXPR
T}
T{
%f GROUP
T}@T{
messages originating from any member of GROUP
T}
T{
~g
T}@T{
cryptographically signed messages
T}
T{
~G
T}@T{
cryptographically encrypted messages
T}
T{
~h EXPR
T}@T{
messages which contain EXPR in the message header
T}
T{
=h STRING
T}@T{
If IMAP is enabled, like ~h but searches for STRING on the server,
rather than downloading each message and searching it locally; STRING
must be of the form \[lq]header: substring\[rq].
T}
T{
~H EXPR
T}@T{
messages with a spam attribute matching EXPR
T}
T{
~i EXPR
T}@T{
messages which match EXPR in the \[lq]Message\-ID\[rq] field
T}
T{
~k
T}@T{
messages which contain PGP key material
T}
T{
~L EXPR
T}@T{
messages either originated or received by EXPR
T}
T{
%L GROUP
T}@T{
message either originated or received by any member of GROUP
T}
T{
~l
T}@T{
messages addressed to a known mailing list
T}
T{
~m [MIN]\-[MAX]
T}@T{
messages in the range MIN to MAX
T}
T{
~M EXPR
T}@T{
messages which contain a mime Content\-Type matching EXPR
T}
T{
~n [MIN]\-[MAX]
T}@T{
messages with a score in the range MIN to MAX
T}
T{
~N
T}@T{
new messages
T}
T{
~O
T}@T{
old messages
T}
T{
~p
T}@T{
messages addressed to you (consults $from, alternates, and local
account/hostname information)
T}
T{
~P
T}@T{
messages from you (consults $from, alternates, and local
account/hostname information)
T}
T{
~Q
T}@T{
messages which have been replied to
T}
T{
~r [MIN]\-[MAX]
T}@T{
messages with \[lq]date\-received\[rq] in a Date range
T}
T{
~R
T}@T{
read messages
T}
T{
~s EXPR
T}@T{
messages having EXPR in the \[lq]Subject\[rq] field.
T}
T{
~S
T}@T{
superseded messages
T}
T{
~t EXPR
T}@T{
messages addressed to EXPR
T}
T{
~T
T}@T{
tagged messages
T}
T{
~u
T}@T{
messages addressed to a subscribed mailing list
T}
T{
~U
T}@T{
unread messages
T}
T{
~v
T}@T{
messages part of a collapsed thread.
T}
T{
~V
T}@T{
cryptographically verified messages
T}
T{
~x EXPR
T}@T{
messages which contain EXPR in the \[lq]References\[rq] or
\[lq]In\-Reply\-To\[rq] field
T}
T{
~X [MIN]\-[MAX]
T}@T{
messages with MIN to MAX attachments
T}
T{
~y EXPR
T}@T{
messages which contain EXPR in the \[lq]X\-Label\[rq] field
T}
T{
~z [MIN]\-[MAX]
T}@T{
messages with a size in the range MIN to MAX
T}
T{
~=
T}@T{
duplicated messages (see $duplicate_threads)
T}
T{
~$
T}@T{
unreferenced messages (requires threaded view)
T}
T{
~(PATTERN)
T}@T{
messages in threads containing messages matching PATTERN, e.g.\ all
threads containing messages from you: ~(~P)
T}
T{
\f[C]~<(PATTERN)\f[]
T}@T{
messages whose immediate parent matches PATTERN, e.g.\ replies to your
messages: \f[C]~<(~P)\f[]
T}
T{
\f[C]~>(PATTERN)\f[]
T}@T{
messages having an immediate child matching PATTERN, e.g.\ messages you
replied to: \f[C]~>(~P)\f[]
T}
.TE
.PP
Where EXPR is a regular expression, and GROUP is an address group.
.PP
Special attention has to be paid when using regular expressions inside
of patterns.
Specifically, Mutt's parser for these patterns will strip one level of
backslash (\[lq]”), which is normally used for quoting. If it is your
intention to use a backslash in the regular expression, you will need to
use two backslashes instead (“\\\[rq]).
.PP
You can force Mutt to treat EXPR as a simple string instead of a regular
expression by using = instead of ~ in the pattern name.
For example, \f[C]=b\ *.*\f[] will find all messages that contain the
literal string \f[C]“*.*”\f[].
Simple string matches are less powerful than regular expressions but can
be considerably faster.
.PP
For IMAP folders, string matches =b, =B, and =h will be performed on the
server instead of by fetching every message.
IMAP treats =h specially: it must be of the form \[lq]header:
substring\[rq] and will not partially match header names.
The substring part may be omitted if you simply wish to find messages
containing a particular header without regard to its value.
.PP
Patterns matching lists of addresses (notably c, C, p, P and t) match if
there is at least one match in the whole list.
If you want to make sure that all elements of that list match, you need
to prefix your pattern with \[lq]^\[rq].
This example matches all mails which only has recipients from Germany.
.SH MAN EG AUTHOR
.PP
David Lowry\-Duda <david@lowryduda.com>
.SH SEE ALSO
.PP
\f[B]mutt(1)\f[], the mutt manual
